
# Hyprland Configuration File
# https://wiki.hypr.land/Configuring/


################
### MONITORS ###
################

# See https://wiki.hypr.land/Configuring/Monitors/
monitor=,preferred,auto,auto


###################
### MY PROGRAMS ###
###################

# See https://wiki.hypr.land/Configuring/Keywords/

# Set programs that you use
$terminal = kitty
$fileManager = dolphin
$menu = ~/dotfiles/scripts/wofi-launcher.sh


#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

# exec-once = $terminal
# exec-once = nm-applet &
# exec-once = waybar & hyprpaper & firefox

# Start fcitx5 input method
exec-once = fcitx5 -d

# Start notification daemon
exec-once = mako

# Start Clash Verge
exec-once = clash-verge

# Start waybar
exec-once = waybar

# Load X resources for DPI
exec-once = xrdb ~/.Xresources

# Start swww daemon and set wallpaper
exec-once = ~/.config/swww/swww-autostart.sh

# Start network manager applet
exec-once = nm-applet

# Start bluetooth manager applet
exec-once = blueman-applet

# Start gnome-keyring-daemon
exec-once = gnome-keyring-daemon --start --components=pkcs11,secrets,ssh




#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hypr.land/Configuring/Environment-variables/

env = XCURSOR_SIZE,32
env = HYPRCURSOR_SIZE,32

# Input method environment variables
env = GTK_IM_MODULE,fcitx
env = QT_IM_MODULE,fcitx
env = XMODIFIERS,@im=fcitx
env = XDG_CURRENT_DESKTOP,Hyprland

# UI Scaling settings for better readability
env = GDK_SCALE,1.25
env = XCURSOR_SIZE,32

# DPI settings - adjusted for larger UI elements
env = GDK_DPI_SCALE,1.0
env = QT_FONT_DPI,120
env = QT_SCALE_FACTOR,1.25

# Force dark theme
env = GTK_THEME,Adwaita:dark
env = QT_STYLE_OVERRIDE,Adwaita-Dark

# Performance optimizations
env = __GL_THREADED_OPTIMIZATIONS,1
env = __GL_SHADER_CACHE,1
env = MESA_SHADER_CACHE_DISABLE,false
env = MOZ_ENABLE_WAYLAND,1
env = CLUTTER_BACKEND,wayland
env = SDL_VIDEODRIVER,wayland

# Reduce startup time
env = QT_QPA_PLATFORM,wayland;xcb
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1

# Better font rendering
env = FREETYPE_PROPERTIES,truetype:interpreter-version=40



###################
### PERMISSIONS ###
###################

# See https://wiki.hypr.land/Configuring/Permissions/
# Please note permission changes here require a Hyprland restart and are not applied on-the-fly
# for security reasons

# ecosystem {
#   enforce_permissions = 1
# }

# permission = /usr/(bin|local/bin)/grim, screencopy, allow
# permission = /usr/(lib|libexec|lib64)/xdg-desktop-portal-hyprland, screencopy, allow
# permission = /usr/(bin|local/bin)/hyprpm, plugin, allow


#####################
### LOOK AND FEEL ###
#####################

# Refer to https://wiki.hypr.land/Configuring/Variables/

# https://wiki.hypr.land/Configuring/Variables/#general
general {
    gaps_in = 3
    gaps_out = 8

    border_size = 0

    # https://wiki.hypr.land/Configuring/Variables/#variable-types for info about colors
    col.active_border = rgba(5e81acee) rgba(88c0d0ee) 45deg
    col.inactive_border = rgba(d8dee9aa)

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = false

    # Please see https://wiki.hypr.land/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    layout = dwindle
}

# https://wiki.hypr.land/Configuring/Variables/#decoration
decoration {
    rounding = 10

    # Change transparency of focused and unfocused windows
    active_opacity = 1.0
    inactive_opacity = 0.88

    shadow {
        enabled = true
        range = 8
        render_power = 3
        color = rgba(1a1a1aee)
        color_inactive = rgba(1a1a1a77)
        offset = 2 2
        scale = 0.97
    }

    # https://wiki.hypr.land/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 8
        passes = 2
        
        vibrancy = 0.2
        brightness = 1.0
        contrast = 1.1
        noise = 0.01
        
        # Blur for layered surfaces (e.g., notifications, waybar)
        new_optimizations = true
        xray = false
        popups = true
        popups_ignorealpha = 0.2
        ignore_opacity = false
        
        # Special blur for specific surfaces
        special = true
    }
}

# https://wiki.hypr.land/Configuring/Variables/#animations
animations {
    enabled = yes, please :)

    # Default animations, see https://wiki.hypr.land/Configuring/Animations/ for more

    bezier = easeOutQuint,0.23,1,0.32,1
    bezier = easeInOutCubic,0.65,0.05,0.36,1
    bezier = linear,0,0,1,1
    bezier = almostLinear,0.5,0.5,0.75,1.0
    bezier = quick,0.15,0,0.1,1

    animation = global, 1, 4, default
    animation = border, 1, 3, easeOutQuint
    animation = windows, 1, 2.5, easeOutQuint
    animation = windowsIn, 1, 2, easeOutQuint, popin 87%
    animation = windowsOut, 1, 1, linear, popin 87%
    animation = fadeIn, 1, 1, almostLinear
    animation = fadeOut, 1, 1, almostLinear
    animation = fade, 1, 2, quick
    animation = layers, 1, 2.5, easeOutQuint
    animation = layersIn, 1, 2.5, easeOutQuint, fade
    animation = layersOut, 1, 1, linear, fade
    animation = fadeLayersIn, 1, 1, almostLinear
    animation = fadeLayersOut, 1, 1, almostLinear
    animation = workspaces, 1, 1.2, almostLinear, fade
    animation = workspacesIn, 1, 0.8, almostLinear, fade
    animation = workspacesOut, 1, 1.2, almostLinear, fade
}

# Ref https://wiki.hypr.land/Configuring/Workspace-Rules/
# "Smart gaps" / "No gaps when only"
# uncomment all if you wish to use that.
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrule = rounding 0, floating:0, onworkspace:w[tv1]
# windowrule = bordersize 0, floating:0, onworkspace:f[1]
# windowrule = rounding 0, floating:0, onworkspace:f[1]

# See https://wiki.hypr.land/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

# See https://wiki.hypr.land/Configuring/Master-Layout/ for more
master {
    new_status = master
}

# https://wiki.hypr.land/Configuring/Variables/#misc
misc {
    force_default_wallpaper = 0 # 禁用默认壁纸
    disable_hyprland_logo = true # 禁用Hyprland logo
    mouse_move_enables_dpms = true # 鼠标移动唤醒显示器
    enable_swallow = true # 启用窗口吞噬
    swallow_regex = ^(kitty|Alacritty)$ # 终端窗口吞噬规则
    focus_on_activate = true # 激活时聚焦
    vrr = 1 # 可变刷新率支持
}


#############
### INPUT ###
#############

# https://wiki.hypr.land/Configuring/Variables/#input
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = false
    }
}

# https://wiki.hypr.land/Configuring/Variables/#gestures
gestures {
    workspace_swipe = false
}

# Example per-device config
# See https://wiki.hypr.land/Configuring/Keywords/#per-device-input-configs for more
device {
    name = epic-mouse-v1
    sensitivity = -0.5
}


###################
### KEYBINDINGS ###
###################

# See https://wiki.hypr.land/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hypr.land/Configuring/Binds/ for more
bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu
bind = ALT, grave, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle


# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Alt+Tab workspace switching
bind = ALT, Tab, workspace, e+1
bind = ALT SHIFT, Tab, workspace, e-1

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Window management shortcuts
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Resize windows
bind = $mainMod CTRL, left, resizeactive, -50 0
bind = $mainMod CTRL, right, resizeactive, 50 0
bind = $mainMod CTRL, up, resizeactive, 0 -50
bind = $mainMod CTRL, down, resizeactive, 0 50

# Center window
bind = $mainMod, period, centerwindow

# Window management enhancements
bind = $mainMod, F, fullscreen, 0
bind = $mainMod SHIFT, F, fullscreen, 1
bind = $mainMod, T, togglefloating,
bind = $mainMod ALT, T, pin

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# Wallpaper controls
bind = $mainMod, W, exec, ~/.config/swww/swww-random.sh
bind = $mainMod SHIFT, W, exec, ~/.config/swww/swww-set.sh

# Power management
bind = $mainMod, L, exec, systemctl suspend
bind = $mainMod SHIFT, L, exec, ~/.config/hypr/power-menu.sh
bind = $mainMod CTRL, L, exec, swaylock -f -c 000000 || hyprlock

# Screenshot
bind = , Print, exec, grim -c -t jpeg -q 85 - | wl-copy
bind = ALT, A, exec, sh -c 'FILE="/tmp/screenshot_$(date +%s).png"; grim -c -g "$(slurp)" "$FILE" && swappy -f "$FILE"'

# App quick access - removed for better usability

# Input method switching
bind = $mainMod, I, exec, fcitx5-remote -t

# Additional window controls
bind = $mainMod, comma, cyclenext,
bind = $mainMod SHIFT, comma, cyclenext, prev

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hypr.land/Configuring/Window-Rules/ for more
# See https://wiki.hypr.land/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule
# windowrule = float,class:^(kitty)$,title:^(kitty)$

# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# Improve XWayland app behavior
windowrulev2 = immediate, xwayland:1
windowrulev2 = noinitialfocus, class:^jetbrains-.*$, title:^win.*$

# Fix electron apps (Discord, etc.)
windowrulev2 = opaque, class:^(discord)$
windowrulev2 = opaque, class:^(WebCord)$


# Fix XWayland font scaling issues
xwayland {
    force_zero_scaling = true
}

# UNIVERSAL RULE: All floating windows are fully opaque and no blur (fixes transparent border issues)
windowrulev2 = opacity 1.0 1.0, floating:1
windowrulev2 = noblur, floating:1

# Transparency rules for specific applications (only for tiled/main windows)
# Terminal applications - slight transparency for aesthetics
windowrulev2 = opacity 0.98 0.85, class:^(kitty)$, floating:0
windowrulev2 = opacity 0.98 0.85, class:^(Alacritty)$, floating:0

# Text editors - minimal transparency to maintain readability
windowrulev2 = opacity 0.98 0.88, class:^(kate)$, floating:0

# File manager - slight transparency
windowrulev2 = opacity 0.98 0.88, class:^(dolphin)$, floating:0

# Browsers - minimal transparency for better content viewing
windowrulev2 = opacity 1.0 0.92, class:^(firefox)$, floating:0
windowrulev2 = opacity 1.0 0.92, class:^(google-chrome)$, floating:0

# Keep some apps fully opaque for optimal viewing/editing
windowrulev2 = opacity 1.0 1.0, class:^(mpv)$
windowrulev2 = opacity 1.0 1.0, class:^(vlc)$
windowrulev2 = opacity 1.0 1.0, class:^(gimp)$
windowrulev2 = opacity 1.0 1.0, class:^(blender)$
windowrulev2 = opacity 1.0 1.0, class:^(obs)$
windowrulev2 = opacity 1.0 1.0, class:^(kdenlive)$

# Office applications - keep fully opaque for document clarity
windowrulev2 = opacity 1.0 1.0, class:^(libreoffice)$
windowrulev2 = opacity 1.0 1.0, class:^(thunderbird)$

# Gaming applications - full opacity for performance
windowrulev2 = opacity 1.0 1.0, class:^(steam)$
windowrulev2 = opacity 1.0 1.0, class:^(gamescope)$

# VSCode specific fixes
windowrulev2 = size 1400 900, class:^(Code)$, floating:0
windowrulev2 = center 1, class:^(Code)$, floating:0
windowrulev2 = opacity 1.0 0.88, class:^(Code)$, floating:0

# Fix VSCode dialog windows
windowrulev2 = float, class:^(Code)$, title:^(Open Folder)$
windowrulev2 = size 800 600, class:^(Code)$, title:^(Open Folder)$
windowrulev2 = center 1, class:^(Code)$, title:^(Open Folder)$

# Fix VSCode file dialogs
windowrulev2 = float, class:^(Code)$, title:^(Open File)$
windowrulev2 = size 800 600, class:^(Code)$, title:^(Open File)$
windowrulev2 = center 1, class:^(Code)$, title:^(Open File)$

# Fix VSCode settings and other dialogs
windowrulev2 = float, class:^(Code)$, title:^(Settings)$
windowrulev2 = size 1000 700, class:^(Code)$, title:^(Settings)$
windowrulev2 = center 1, class:^(Code)$, title:^(Settings)$

# Fix for browser context menus disappearing when losing focus
windowrulev2 = stayfocused, class:^(Google-chrome|google-chrome|chromium|firefox)$, floating:1, xwayland:1

# Force browser menus to be completely opaque
windowrulev2 = opacity 1.0 override 1.0 override, class:^(Google-chrome|google-chrome|chromium|firefox)$, floating:1
windowrulev2 = noblur, class:^(Google-chrome|google-chrome|chromium|firefox)$, floating:1

# Chrome/Chromium specific fixes for context menus
windowrulev2 = opacity 1.0 1.0, class:^(Google-chrome)$, title:^$
windowrulev2 = opacity 1.0 1.0, class:^(chromium)$, title:^$
windowrulev2 = opacity 1.0 1.0, class:^(google-chrome)$, title:^$
windowrulev2 = opacity 1.0 1.0, class:^(chrome)$, title:^$

# Fix Chrome context menu shadows and borders
windowrulev2 = noshadow, class:^(Google-chrome)$, title:^$
windowrulev2 = noshadow, class:^(chromium)$, title:^$
windowrulev2 = noborder, class:^(Google-chrome)$, title:^$
windowrulev2 = noborder, class:^(chromium)$, title:^$

# Force Chrome context menus to be opaque regardless of size
windowrulev2 = opacity 1.0 1.0, class:^(Google-chrome)$, xwayland:1
windowrulev2 = opacity 1.0 1.0, class:^(chromium)$, xwayland:1

# WeChat specific fixes - complete opacity and no decorations
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$
windowrulev2 = noborder, class:^(wechat)$
windowrulev2 = noshadow, class:^(wechat)$
windowrulev2 = noblur, class:^(wechat)$
windowrulev2 = rounding 0, class:^(wechat)$

# WeChat variants (different case)
windowrulev2 = opacity 1.0 1.0, class:^(WeChat)$
windowrulev2 = noborder, class:^(WeChat)$
windowrulev2 = noshadow, class:^(WeChat)$
windowrulev2 = noblur, class:^(WeChat)$
windowrulev2 = rounding 0, class:^(WeChat)$

windowrulev2 = opacity 1.0 1.0, class:^(weixin)$
windowrulev2 = noborder, class:^(weixin)$
windowrulev2 = noshadow, class:^(weixin)$
windowrulev2 = noblur, class:^(weixin)$
windowrulev2 = rounding 0, class:^(weixin)$

# WeChat Wine variant fixes
windowrulev2 = opacity 1.0 1.0, class:^(wine)$, title:^(.*WeChat.*)$
windowrulev2 = noborder, class:^(wine)$, title:^(.*WeChat.*)$
windowrulev2 = noshadow, class:^(wine)$, title:^(.*WeChat.*)$
windowrulev2 = noblur, class:^(wine)$, title:^(.*WeChat.*)$
windowrulev2 = rounding 0, class:^(wine)$, title:^(.*WeChat.*)$

# WeChat empty title windows (likely popups/menus)
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$, title:^$
windowrulev2 = noborder, class:^(wechat)$, title:^$
windowrulev2 = noshadow, class:^(wechat)$, title:^$
windowrulev2 = noblur, class:^(wechat)$, title:^$

# Additional WeChat window patterns for search/global windows
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$, title:^(.*搜索.*)$
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$, title:^(.*Search.*)$
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$, title:^(.*全局.*)$
windowrulev2 = opacity 1.0 1.0, class:^(wechat)$, title:^(.*Global.*)$

# Catch-all for any remaining WeChat transparency issues
windowrulev2 = opacity 1.0 override, class:^(wechat)$
windowrulev2 = opacity 1.0 override, class:^(WeChat)$
windowrulev2 = opacity 1.0 override, class:^(weixin)$

# WeChat popup windows and dialogs - force floating and proper display
windowrulev2 = float, class:^(wechat)$, title:^$
windowrulev2 = float, class:^(wechat)$, title:^(.*选择.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*表情.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*搜索.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*Search.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*设置.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*Settings.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*对话框.*)$
windowrulev2 = float, class:^(wechat)$, title:^(.*Dialog.*)$

# Force focus and center for WeChat popups
windowrulev2 = stayfocused, class:^(wechat)$, title:^$
windowrulev2 = center, class:^(wechat)$, title:^$
windowrulev2 = pin, class:^(wechat)$, title:^$

# Handle WeChat subwindows (often have no title or empty title)
windowrulev2 = float, class:^(wechat)$, title:^()$
windowrulev2 = pin, class:^(wechat)$, title:^()$
windowrulev2 = stayfocused, class:^(wechat)$, title:^()$
windowrulev2 = center, class:^(wechat)$, title:^()$

# Ensure WeChat popups stay on top of everything
windowrulev2 = pin, class:^(wechat)$, floating:1
windowrulev2 = stayfocused, class:^(wechat)$, floating:1

# ========== FEISHU / LARK OPTIMIZATION ==========
# Feishu main window optimization
windowrulev2 = opacity 1.0 1.0, class:^(feishu)$
windowrulev2 = opacity 1.0 1.0, class:^(Feishu)$
windowrulev2 = opacity 1.0 1.0, class:^(bytedance-feishu)$
windowrulev2 = opacity 1.0 1.0, class:^(lark)$

# Feishu popup and dialog handling
windowrulev2 = float, class:^(feishu)$, title:^$
windowrulev2 = float, class:^(feishu)$, title:^(.*设置.*)$
windowrulev2 = float, class:^(feishu)$, title:^(.*Settings.*)$
windowrulev2 = float, class:^(feishu)$, title:^(.*通知.*)$
windowrulev2 = float, class:^(feishu)$, title:^(.*Notification.*)$
windowrulev2 = float, class:^(feishu)$, title:^(.*选择.*)$
windowrulev2 = float, class:^(feishu)$, title:^(.*Select.*)$

# Feishu variants (Lark, bytedance-feishu)
windowrulev2 = float, class:^(Feishu)$, title:^$
windowrulev2 = float, class:^(bytedance-feishu)$, title:^$
windowrulev2 = float, class:^(lark)$, title:^$

# Feishu floating windows positioning
windowrulev2 = center, class:^(feishu)$, floating:1
windowrulev2 = center, class:^(Feishu)$, floating:1
windowrulev2 = center, class:^(bytedance-feishu)$, floating:1
windowrulev2 = center, class:^(lark)$, floating:1

# Feishu notification and popup focus
windowrulev2 = stayfocused, class:^(feishu)$, title:^$
windowrulev2 = pin, class:^(feishu)$, title:^$

# ========== WORKSPACE RULES ==========
# 智能工作区分配 - 根据应用类型自动分配
workspace = 1, monitor:DP-1, default:true
workspace = 2, monitor:DP-1
workspace = 3, monitor:DP-1  
workspace = 4, monitor:DP-1
workspace = 5, monitor:DP-1

# 工作区专用应用绑定（可选，默认在当前工作区打开）
# windowrulev2 = workspace 1, class:^(firefox|google-chrome|chromium)$
# windowrulev2 = workspace 2, class:^(Code|code|code-oss)$
# windowrulev2 = workspace 3, class:^(dolphin|thunar|nautilus)$
# windowrulev2 = workspace 4, class:^(feishu|wechat|discord|telegram)$
# windowrulev2 = workspace 5, class:^(obs|kdenlive|gimp|blender)$

# 特殊工作区配置
workspace = special:scratchpad, gapsout:40, gapsin:40

# Float specific dialog windows
windowrulev2 = float, class:^(nm-applet)$
windowrulev2 = float, class:^(blueman-manager)$
windowrulev2 = float, class:^(pavucontrol)$
windowrulev2 = float, class:^(wofi)$

# Picture-in-picture windows
windowrulev2 = float, title:^(Picture-in-Picture)$
windowrulev2 = pin, title:^(Picture-in-Picture)$
windowrulev2 = noborder, title:^(Picture-in-Picture)$

# ========== BROWSER OPTIMIZATION ==========
# Firefox optimization
windowrulev2 = opacity 1.0 1.0, class:^(firefox)$
windowrulev2 = opacity 1.0 1.0, class:^(Firefox)$

# Chrome/Chromium optimization  
windowrulev2 = opacity 1.0 1.0, class:^(google-chrome)$
windowrulev2 = opacity 1.0 1.0, class:^(Google-chrome)$
windowrulev2 = opacity 1.0 1.0, class:^(chromium)$
windowrulev2 = opacity 1.0 1.0, class:^(Chromium)$

# Edge optimization
windowrulev2 = opacity 1.0 1.0, class:^(microsoft-edge)$
windowrulev2 = opacity 1.0 1.0, class:^(Microsoft-edge)$

# Browser popup and download dialogs
windowrulev2 = float, class:^(firefox)$, title:^(.*下载.*)$
windowrulev2 = float, class:^(firefox)$, title:^(.*Download.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(.*下载.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(.*Download.*)$

# Browser extension popups
windowrulev2 = float, class:^(firefox)$, title:^(扩展.*)$
windowrulev2 = float, class:^(firefox)$, title:^(Extension.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(扩展.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(Extension.*)$

# Developer tools
windowrulev2 = float, class:^(firefox)$, title:^(.*开发者工具.*)$
windowrulev2 = float, class:^(firefox)$, title:^(.*Developer Tools.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(.*开发者工具.*)$
windowrulev2 = float, class:^(google-chrome)$, title:^(.*DevTools.*)$

# ========== FILE MANAGER OPTIMIZATION ==========
# Dolphin file manager
windowrulev2 = opacity 1.0 1.0, class:^(dolphin)$
windowrulev2 = opacity 1.0 1.0, class:^(org.kde.dolphin)$

# Dolphin dialogs and popups
windowrulev2 = float, class:^(dolphin)$, title:^(.*属性.*)$
windowrulev2 = float, class:^(dolphin)$, title:^(.*Properties.*)$
windowrulev2 = float, class:^(dolphin)$, title:^(.*设置.*)$
windowrulev2 = float, class:^(dolphin)$, title:^(.*Settings.*)$
windowrulev2 = float, class:^(dolphin)$, title:^(.*删除.*)$
windowrulev2 = float, class:^(dolphin)$, title:^(.*Delete.*)$

# Other file managers
windowrulev2 = opacity 1.0 1.0, class:^(thunar)$
windowrulev2 = opacity 1.0 1.0, class:^(nautilus)$
windowrulev2 = opacity 1.0 1.0, class:^(nemo)$
windowrulev2 = opacity 1.0 1.0, class:^(pcmanfm)$
